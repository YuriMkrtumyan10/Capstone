import requests
from bs4 import BeautifulSoup
import pandas as pd
from datetime import datetime

def scrape_news(url):
    current_date = datetime.now().strftime('%Y/%m/%d')
    url = f'https://news.am/arm/news/armenia/allthemes/{current_date}/'
    # Send a request to the website
    response = requests.get(url)
    # Initialize BeautifulSoup
    soup = BeautifulSoup(response.text, 'html.parser')
    
    # Find news items - This part highly depends on the website's structure
    # Below is a generic example; you need to adjust selectors based on the actual website
    news_items = soup.find_all('article', class_='article-item')
    
    news_data = []
    for item in news_items:
        title = item.find('div', class_='describe').find('div', class_='title').text.strip()
        link = item.find('div', class_='describe').find('a')['href']
        # Extract other details you need
        
        news_data.append({'title': title, 'link': link})
    
    return news_data

def compile_report(news_sites):
    all_news = []
    for site in news_sites:
        news_data = scrape_news(site['url'])
        for news_item in news_data:
            all_news.append(news_item)
    
    # Convert to DataFrame for easier manipulation
    df = pd.DataFrame(all_news)
    
    # Save or display your report
    report_name = f"news_report_{datetime.now().strftime('%Y%m%d')}.csv"
    df.to_csv(report_name, index=False)
    print(f"Report saved as {report_name}")


news_sites = [
    {'name': 'NewsAM', 'url': 'https://news.am/arm/news/armenia/allthemes/'},
    # Add more sites as needed
]

compile_report(news_sites)






# def lambda_handler(event, context):
#     # Your code here
#     compile_report(news_sites)
#     return {
#         'statusCode': 200,
#         'body': 'Report generation successful'
#     }

# import boto3

# def send_email_with_ses(report_content):
#     ses_client = boto3.client('ses', region_name='your-region')
#     response = ses_client.send_email(
#         Source='your-verified-email@example.com',
#         Destination={'ToAddresses': ['recipient@example.com']},
#         Message={
#             'Subject': {'Data': 'Daily News Report'},
#             'Body': {'Text': {'Data': report_content}}
#         }
#     )
#     return response
